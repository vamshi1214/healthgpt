# Auto-generated by Lumenary
from pydantic import BaseModel, Field
from typing import List, Optional, Dict, Any, Union, Literal, Annotated, Tuple, Set, Any

from datetime import datetime, date, time, timedelta
from uuid import UUID
import uuid

class TokenExchangeRequest(BaseModel):
    client_id: str
    grant_type: str
    code: Optional[str] = None
    code_verifier: Optional[str] = None

class TokenResponse(BaseModel):
    access_token: str
    token_type: str = "bearer"
    expires_in: int = 3600

class TokenValidationRequest(BaseModel):
    token: str
    
class LogoutResponse(BaseModel):
    success: bool = True

# Import user-defined models that we need for input/response models
from core.doctor import Doctor
from core.user_query import UserQuery
from core.appointment import Appointment
from core.doctor_review import DoctorReview
from core.medical_specialty import MedicalSpecialty

class BodyDoctorFinderServiceFindDoctors(BaseModel):
  query: str
  user_location: Optional[str] = None
  user_latitude: Optional[float] = None
  user_longitude: Optional[float] = None
  max_distance_miles: int
  insurance_provider: Optional[str] = None

FindDoctorsOutputSchema = Dict
class BodyDoctorFinderServiceGetDoctorDetails(BaseModel):
  doctor_id: str

GetDoctorDetailsOutputSchema = Doctor
class BodyDoctorFinderServiceGetDoctorReviews(BaseModel):
  doctor_id: str
  limit: int

GetDoctorReviewsOutputSchema = List[DoctorReview]
class BodyDoctorFinderServiceBookAppointment(BaseModel):
  doctor_id: str
  patient_name: str
  patient_email: str
  patient_phone: str
  appointment_datetime: str
  chief_complaint: str
  appointment_type: str
  visit_type: str
  insurance_provider: Optional[str] = None
  insurance_plan: Optional[str] = None
  source_query_id: Optional[str] = None

BookAppointmentOutputSchema = Appointment
class BodyDoctorFinderServiceGetAvailableSlots(BaseModel):
  doctor_id: str
  start_date: str
  end_date: str

GetAvailableSlotsOutputSchema = List[Dict]
class BodyDoctorFinderServiceSubmitDoctorReview(BaseModel):
  doctor_id: str
  appointment_id: Optional[str] = None
  overall_rating: int
  review_text: Optional[str] = None
  patient_name: Optional[str] = None
  condition_treated: Optional[str] = None
  would_recommend: bool

SubmitDoctorReviewOutputSchema = DoctorReview
    